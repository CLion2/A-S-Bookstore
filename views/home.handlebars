{{! Use the main layout }}
{{!< main }}

{{! New Post Submission Form }}
<section class="content-container">
    {{#if loggedIn}}
        <!-- show the create post form when logged in -->
        <section class="post-form">
            <!-- make a header here -->
            <form action="/posts" method="POST">
                <!-- title input field name = "title" -->
                <h2>Title</h2>
                <input type="text" name="title">
                <!-- text area input field name = "content" -->
                <h2>Content</h2>
                <textarea name="content" id="emoji-here"></textarea>
                <div class="form-actions">
                    <button type="button" class="emoji-button" onclick="toggleEmojiPanel()">ðŸ˜€</button>
                    <button type="submit" class="post-button">Post</button>
                </div>
            </form>

            <div id="emoji-container" class="emoji-panel" style="display: none;">
                <!-- input field for the emoji search, use oninput="searchEmojis() -->
                <input type="text" id="emoji-search" oninput="searchEmojis()" placeholder="Search emojis...">
                <!-- a div, id = "emoji-grid" -->
                <div id="emoji-grid"></div>
            </div>
        </section>
        <section class="posts-list">
        <h3 class="recommendation">Check Our <a href="/books">Books</a> Page!</h3>
        <!-- recent posts -->
        <div class="posts-wrapper">
            {{#if posts.length}}
            <ul>
                {{#each posts}}
                    <!-- you have to pass the user in to posts and this is the syntax -->
                    {{> post this user=../user}}            
                {{/each}}
            </ul>
            {{else}}
                <!-- no posts, oh no, what now? -->
            {{/if}}
        </div>
    </section>
    {{else}}
    <section class="hot-post-list">
        <h3 class="recommendation">Check Our <a href="/books">Books</a> Page!</h3>
        <h3 class="hot-posts">Here are some recent hot posts!</h3>
        {{#if posts.length}}
        <ul>
            {{#each (limit posts 3)}}
                {{> post this user=../user}}            
            {{/each}}
        </ul>
        {{else}}
            <!-- no posts, oh no, what now? -->
        {{/if}}
    </section>
    {{/if}}
</section>


{{! JavaScript for Emoji Integration }}
<script>

/*
 You want to show a subset of the emojis. About 200. However,
 you also want the user to be able to search all emojis,
 so, put them in this array when the array is empty so 
 that you have them.
*/

let allEmojis = [];  // Global list to hold all emojis

function toggleEmojiPanel() {
    const container = document.getElementById('emoji-container');
    container.style.display = container.style.display === 'none' ? 'block' : 'none';


    if(container.style.display === 'block' && allEmojis.length == 0){
        // go "Fetch" you some emojis and show them off with displayEmojies
        // Please type your Emoji API key
        // Replace your-api-key-here with your actual API key
        fetch('/api/emojis')
            .then(response => response.json())
            .then(data => {
                {{!-- console.log('Emojis fetched:', data); --}}
                allEmojis = data;
                displayEmojis(allEmojis);
            })
            .catch(error => {
                console.error('Error fetching emojis:', error);
            });
    }
}

function displayEmojis(emojis,limit=80) {
    const container = document.getElementById('emoji-grid');
    container.innerHTML = '';  // Clear previous results
    if (Array.isArray(emojis) && emojis.length > 0) {
        emojis.slice(0, limit).forEach(emoji => {
            const emojiElement = document.createElement('span');
            emojiElement.textContent = emoji.character;
            emojiElement.title = emoji.slug;  // Showing the emoji name on hover
            emojiElement.style.cursor = 'pointer';
            emojiElement.onclick = () => insertEmoji(emoji.character);
            container.appendChild(emojiElement);
        });
    } else {
        container.textContent = 'No emojis found. Try a different search!';
    }
}

function searchEmojis() {
    const searchTerm = document.getElementById('emoji-search').value.toLowerCase();
    // array.filter takes a predicate
    // use string.includes. 

    const filteredEmojis = allEmojis.filter(emoji => emoji.slug.includes(searchTerm));
    
    displayEmojis(filteredEmojis);
}

function insertEmoji(emoji) {
    // put an emoji on a form somehow. 
    const textarea = document.getElementById('emoji-here');
    textarea.value += emoji;

    // do this when you're doing getting the emoji on the form
    //
    textarea.focus();  // Keep focus on the textarea
}


{{!-- function definitions here --}}
function bookBackground() {
    document.body.style.backgroundImage = 'url("/images/books.jpeg")';
    document.documentElement.style.backgroundImage = 'url("/images/books.jpeg")';
    document.body.style.backgroundSize = 'contain';
    document.documentElement.style.backgroundSize = 'contain';
}

{{!-- function calls --}}
{{#if loggedIn}}
    bookBackground();
{{/if}}
</script>

